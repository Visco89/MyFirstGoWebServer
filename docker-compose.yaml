version: '3'
services:
  api:
    build:
      context: ./
      dockerfile: ./build/api/Dockerfile
    image: go-web-api
    environment:
      - DB_URI=mongodb://mongodb1:27017,mongodb://mongodb2:27017,mongodb://mongodb3:27017
      - DB_NAME=DB
    ports:
      - 8080:8080
    depends_on:
      - setup-rs

  consumer:
    build:
      context: ./
      dockerfile: ./build/kafka/Dockerfile
    image: go-web-kafka
    environment:
      - DB_URI=mongodb://mongodb1:27017,mongodb://mongodb2:27017,mongodb://mongodb3:27017
      - DB_NAME=DB
      - BOOTSTRAP_SERVER=kafka:9092
    depends_on:
      - kafka
      - setup-rs

  setup-rs:
    image: "setup-rs"
    build: ./build/replica/
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3

  mongodb1:
    image: mongo:latest
    hostname: mongodb1
    container_name: mongodb1
    healthcheck:
      test: ["CMD", "docker-healthcheck"]
      interval: 10s
      timeout: s
      retries: 3
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/replica1/db:/data/db
    ports:
      - 27017:27017
    restart: always
    command: --replSet rs0

  mongodb2:
    image: mongo:latest
    hostname: mongodb2
    container_name: mongodb2
    healthcheck:
      test: ["CMD", "docker-healthcheck"]
      interval: 10s
      timeout: s
      retries: 3
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/replica2/db:/data/db
    ports:
      - 27018:27017
    restart: always
    command: --replSet rs0

  mongodb3:
    image: mongo:latest
    hostname: mongodb3
    container_name: mongodb3
    healthcheck:
      test: ["CMD", "docker-healthcheck"]
      interval: 10s
      timeout: s
      retries: 3
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/replica3/db:/data/db
    ports:
      - 27019:27017
    restart: always
    command: --replSet rs0

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092"]
      timeout: 45s
      interval: 10s
      retries: 10
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1